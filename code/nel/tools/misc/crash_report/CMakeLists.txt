INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SRC_DIR} ${QT_INCLUDES})
FILE(GLOB CRASHREPORT_SRC *.cpp)
FILE(GLOB CRASHREPORT_HDR *.h)
FILE(GLOB CRASHREPORT_UI *.ui)

FILE(GLOB CRASHREPORT_MOC_HDR
	crash_report_socket.h
	crash_report_widget.h
)

find_package(Qt5Network)

IF(!WITH_QT5)
	SET(QT_USE_QTGUI TRUE)
	SET(QT_USE_QTNETWORK TRUE)
	SET(QT_USE_QTMAIN TRUE)
	SET(QT_USE_QTOPENGL FALSE)
	SET(QT_USE_QTXML FALSE)
	INCLUDE(${QT_USE_FILE})
ENDIF(!WITH_QT5)

ADD_DEFINITIONS(${QT_DEFINITIONS})

IF(WITH_QT5)
	SET(CMAKE_AUTOMOC ON)
	QT5_WRAP_CPP(CRASHREPORT_MOC_SRC ${CRASHREPORT_MOC_HDR})
	QT5_WRAP_UI(CRASHREPORT_UI_HDR ${CRASHREPORT_UI})
ELSE(WITH_QT5)
	QT4_WRAP_CPP(CRASHREPORT_MOC_SRC ${CRASHREPORT_MOC_HDR})
	QT4_WRAP_UI(CRASHREPORT_UI_HDR ${CRASHREPORT_UI})
ENDIF(WITH_QT5)

SOURCE_GROUP(resources FILES ${CRASHREPORT_UI})
IF(!WITH_QT5)
	SOURCE_GROUP(generated FILES ${CRASHREPORT_UI_HDR} ${CRASHREPORT_MOC_SRC})
ENDIF(!WITH_QT5)
SOURCE_GROUP("" FILES ${CRASHREPORT_SRC} ${CRASHREPORT_HDR})

IF(WITH_QT5)
	ADD_EXECUTABLE(crash_report WIN32 MACOSX_BUNDLE
		${CRASHREPORT_SRC}
		${CRASHREPORT_HDR}
		${CRASHREPORT_UI}
	)
ELSE(WITH_QT5)
	ADD_EXECUTABLE(crash_report WIN32 MACOSX_BUNDLE
		${CRASHREPORT_SRC}
		${CRASHREPORT_MOC_HDR}
		${CRASHREPORT_MOC_SRC}
		${CRASHREPORT_UI_HDR}
	)
ENDIF(WITH_QT5)

IF(WITH_QT5)
	TARGET_LINK_LIBRARIES(crash_report
		Qt5::Widgets
		Qt5::Network)
ELSE(WITH_QT5)
	TARGET_LINK_LIBRARIES(crash_report ${QT_LIBRARIES} ${QT_QTMAIN_LIBRARY})
ENDIF(WITH_QT5)

NL_DEFAULT_PROPS(crash_report "NeL, Tools, Misc: Crash Report")
NL_ADD_RUNTIME_FLAGS(crash_report)

INSTALL(TARGETS crash_report RUNTIME DESTINATION ${NL_BIN_PREFIX})
