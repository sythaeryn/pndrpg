FILE(GLOB SRC *.cpp *.h)

ADD_LIBRARY(nel_drv_openal SHARED ${SRC})

INCLUDE_DIRECTORIES(${LIBXML2_INCLUDE_DIR} ${OPENAL_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(nel_drv_openal ${LIBXML2_LIBRARIES} ${OPENAL_LIBRARY} nelsnd_lowlevel)
SET_TARGET_PROPERTIES(nel_drv_openal PROPERTIES
  VERSION ${NL_VERSION}
  SOVERSION ${NL_VERSION_MAJOR})
ADD_DEFINITIONS(${LIBXML2_DEFINITIONS})

IF(WIN32)
  # Find and include EFX-Util on Windows.
  FIND_PACKAGE(EFXUtil)
  INCLUDE_DIRECTORIES(${EFXUTIL_INCLUDE_DIR})
  TARGET_LINK_LIBRARIES(nel_drv_openal ${EFXUTIL_LIBRARY})
  
  SET_TARGET_PROPERTIES(nel_drv_openal PROPERTIES 
    LINK_FLAGS_DEBUG "${CMAKE_LINK_FLAGS_DEBUG}"
    LINK_FLAGS_RELEASE "${CMAKE_LINK_FLAGS_RELEASE}"
    DEBUG_POSTFIX "_d"
    RELEASE_POSTFIX "_r"
    PROJECT_LABEL "Driver, Sound: OpenAL")
ENDIF(WIN32)

IF(WITH_PCH)
  ADD_NATIVE_PRECOMPILED_HEADER(nel_drv_openal ${CMAKE_CURRENT_SOURCE_DIR}/stdopenal.h ${CMAKE_CURRENT_SOURCE_DIR}/stdopenal.cpp)
ENDIF(WITH_PCH)

INSTALL(TARGETS nel_drv_openal RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib COMPONENT driverssound)
IF(WITH_MAXPLUGIN)
  INSTALL(TARGETS nel_drv_openal RUNTIME DESTINATION maxplugin COMPONENT driverssound)
ENDIF(WITH_MAXPLUGIN)
