!!ARBfp1.0
OPTION ARB_precision_hint_fastest;
# cgc version 3.1.0013, build date Apr 18 2012
# command line args: -profile arbfp1 -O3 -fastmath -fastprecision
# source file: fxaa_pp.cg
#vendor NVIDIA Corporation
#version 3.1.0.13
#profile arbfp1
#program fxaa_pp
#semantic fxaa_pp.fxaaConsoleRcpFrameOpt
#semantic fxaa_pp.fxaaConsoleRcpFrameOpt2
#semantic fxaa_pp.nlTex0 : TEX0
#var float2 pos : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var float4 fxaaConsolePosPos : $vin.TEXCOORD1 : TEX1 : 1 : 1
#var float4 fxaaConsoleRcpFrameOpt :  : c[0] : 2 : 1
#var float4 fxaaConsoleRcpFrameOpt2 :  : c[1] : 3 : 1
#var sampler2D nlTex0 : TEX0 : texunit 0 : 4 : 1
#var float4 oCol : $vout.COLOR : COL : 5 : 1
#const c[2] = 0.125 0 -2 2
#const c[3] = 0.001953125 0.5
PARAM c[4] = { program.local[0..1],
		{ 0.125, 0, -2, 2 },
		{ 0.001953125, 0.5 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R1.w, fragment.texcoord[1].zyzw, texture[0], 2D;
ADD R0.x, R1.w, c[3];
TEX R0.w, fragment.texcoord[1].xwzw, texture[0], 2D;
TEX R1.w, fragment.texcoord[1], texture[0], 2D;
ADD R0.y, -R0.x, R0.w;
ADD R0.z, R1.w, R0.y;
TEX R2.w, fragment.texcoord[1].zwzw, texture[0], 2D;
ADD R0.y, -R1.w, R0;
ADD R1.x, R2.w, R0.y;
ADD R1.y, R0.z, -R2.w;
MUL R2.xy, R1, R1;
ADD R0.y, R2.x, R2;
RSQ R0.y, R0.y;
MUL R2.xy, R0.y, R1;
MAD R3.xy, R2, c[0].zwzw, fragment.texcoord[0];
ABS R0.z, R2.y;
ABS R0.y, R2.x;
MIN R0.y, R0, R0.z;
RCP R0.y, R0.y;
MUL R1.xy, R0.y, R2;
MUL R1.xy, R1, c[2].x;
MIN R1.xy, R1, c[2].w;
TEX R4, R3, texture[0], 2D;
MAD R2.xy, -R2, c[0].zwzw, fragment.texcoord[0];
TEX R3, R2, texture[0], 2D;
ADD R3, R3, R4;
MAX R1.xy, R1, c[2].z;
MAD R2.xy, R1, c[1].zwzw, fragment.texcoord[0];
MUL R5, R3, c[3].y;
MAD R1.xy, -R1, c[1].zwzw, fragment.texcoord[0];
MIN R0.z, R0.x, R2.w;
MIN R0.y, R0.w, R1.w;
MIN R0.y, R0, R0.z;
MAX R0.z, R0.x, R2.w;
MAX R0.x, R0.w, R1.w;
MAX R0.x, R0, R0.z;
TEX R4, R2, texture[0], 2D;
TEX R3, R1, texture[0], 2D;
ADD R3, R3, R4;
MAD R3, R3, c[3].y, R5;
MUL R3, R3, c[3].y;
SLT R0.z, R0.x, R3.w;
SLT R0.x, R3.w, R0.y;
ADD_SAT R0.x, R0, R0.z;
CMP result.color, -R0.x, R5, R3;
END
# 45 instructions, 6 R-regs
